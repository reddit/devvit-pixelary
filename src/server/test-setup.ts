import { vi } from 'vitest';

// Mock @devvit/web/server
vi.mock('@devvit/web/server', () => ({
  redis: {
    get: vi.fn(),
    set: vi.fn(),
    del: vi.fn(),
    incr: vi.fn(),
    mGet: vi.fn(),
    zAdd: vi.fn(),
    zRange: vi.fn(),
    zCard: vi.fn(),
    zScore: vi.fn(),
    zRank: vi.fn(),
    zIncrBy: vi.fn(),
    hGet: vi.fn(),
    hSet: vi.fn(),
    hGetAll: vi.fn(),
    hDel: vi.fn(),
    hIncrBy: vi.fn(),
    sAdd: vi.fn(),
    sRem: vi.fn(),
    sMembers: vi.fn(),
    sIsMember: vi.fn(),
    lPush: vi.fn(),
    rPop: vi.fn(),
    lLen: vi.fn(),
    lRange: vi.fn(),
    expire: vi.fn(),
    ttl: vi.fn(),
    exists: vi.fn(),
    keys: vi.fn(),
    flushDb: vi.fn(),
  },
  reddit: {
    getPostById: vi.fn(),
    getCommentById: vi.fn(),
    getSubredditByName: vi.fn(),
    getUserByUsername: vi.fn(),
    createComment: vi.fn(),
    updateComment: vi.fn(),
    deleteComment: vi.fn(),
    createPost: vi.fn(),
    updatePost: vi.fn(),
    deletePost: vi.fn(),
    sendPrivateMessage: vi.fn(),
    banUser: vi.fn(),
    unbanUser: vi.fn(),
    muteUser: vi.fn(),
    unmuteUser: vi.fn(),
    approvePost: vi.fn(),
    removePost: vi.fn(),
    lockPost: vi.fn(),
    unlockPost: vi.fn(),
    stickyPost: vi.fn(),
    unstickyPost: vi.fn(),
    distinguishComment: vi.fn(),
    undistinguishComment: vi.fn(),
    approveComment: vi.fn(),
    removeComment: vi.fn(),
    lockComment: vi.fn(),
    unlockComment: vi.fn(),
  },
  realtime: {
    send: vi.fn(),
    subscribe: vi.fn(),
    unsubscribe: vi.fn(),
  },
  scheduler: {
    runAfter: vi.fn(),
    runAt: vi.fn(),
    runEvery: vi.fn(),
    cancelJob: vi.fn(),
    runJob: vi.fn(),
  },
  logger: {
    info: vi.fn(),
    warn: vi.fn(),
    error: vi.fn(),
    debug: vi.fn(),
  },
  moderator: {
    isModerator: vi.fn(),
    getModerators: vi.fn(),
  },
  user: {
    isModerator: vi.fn(),
    isAdmin: vi.fn(),
    isOwner: vi.fn(),
    isApproved: vi.fn(),
    isBanned: vi.fn(),
    isMuted: vi.fn(),
  },
}));
